/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Patient;

import Business.EcoSystem;
import Business.EnterPrise.Enterprise;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.PatientVisit.Allergy;
import Business.PatientVisit.Medication;
import Business.PatientVisit.Prescription;
import Business.PatientVisit.Visit;
import Business.PatientVisit.VitalSign;
import Business.UserAccount.UserAccount;
import Business.VisitPayment.VisitCharges;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.sun.javafx.scene.EnteredExitedHandler;
import java.awt.CardLayout;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author samar
 */
public class PatientViewAllVisitsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientViewAllVisitsJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private Organization organization;
    private EcoSystem ecoSystem;
    private Patient patient;

    public PatientViewAllVisitsJPanel(JPanel upc, UserAccount userAccount, Organization org, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        patient = userAccount.getPatient();
        userProcessContainer = upc;
        this.userAccount = userAccount;
        this.organization = org;
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;

        populatePatientVisit();
    }

    public void populatePatientVisit() {
        DefaultTableModel model = (DefaultTableModel) patientVisitTable.getModel();
        model.setRowCount(0);
        for (Visit visit : patient.getVisitDirectory().getVisitList()) {
            Object[] row = new Object[4];
            row[0] = visit;
            row[1] = visit.getVisitType();
            row[2] = visit.getDoctor();
            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        medicationTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        docCommentTxt = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        visitTypeTxt = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        allergyNameTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        respiratetextfield = new javax.swing.JTextField();
        heartratetextfield = new javax.swing.JTextField();
        bloodpresstextfield = new javax.swing.JTextField();
        waighttextfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientVisitTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        paymentStatusTxt = new javax.swing.JTextField();
        visitChargeTxt = new javax.swing.JTextField();
        paymentDateTxt = new javax.swing.JTextField();
        billGenratedDateTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        selectFileTxt = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setText("Visit Type:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 76, -1, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Visit Details");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 16, -1, -1));

        medicationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Medicine Name", "Dose", "Start Date", "End Date", "No of Days", "Total No of medicine"
            }
        ));
        jScrollPane2.setViewportView(medicationTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, 560, 90));

        docCommentTxt.setColumns(20);
        docCommentTxt.setRows(5);
        jScrollPane3.setViewportView(docCommentTxt);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 390, 290, 50));

        jLabel9.setText("Doctor Comment:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 410, -1, -1));
        add(visitTypeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(908, 73, 76, -1));

        allergyNameTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Allergy Name", "Detected Date"
            }
        ));
        jScrollPane5.setViewportView(allergyNameTable);

        add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 270, -1, 97));

        jLabel8.setText("Respiratory rate:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 510, -1, 35));

        jLabel11.setText("Heart Rate:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 550, -1, 35));

        jLabel12.setText("Systolic bloodÂ Pressure:");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 590, -1, 35));

        jLabel13.setText("Weight in pounds:");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 630, -1, 35));

        respiratetextfield.setEditable(false);
        add(respiratetextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 510, 130, 35));

        heartratetextfield.setEditable(false);
        add(heartratetextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 550, 130, 35));

        bloodpresstextfield.setEditable(false);
        add(bloodpresstextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 590, 130, 35));

        waighttextfield.setEditable(false);
        add(waighttextfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 630, 130, 35));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Medecine Name List:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Allergy Names:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 250, -1, -1));

        patientVisitTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Visit Date", "Doctor Name", "Visit Type"
            }
        ));
        jScrollPane1.setViewportView(patientVisitTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 520, 96));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Patient Visits:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        jButton1.setText("View Visit Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, -1, 35));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 670, -1, 35));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Visit Charges Details:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 130, -1, -1));

        jLabel6.setText("Visit Charges:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 180, -1, 30));

        jLabel7.setText("Payment Date:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 240, -1, -1));

        jLabel14.setText("Bill Generated Date:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(1400, 280, -1, -1));

        jLabel15.setText("Payment Status:");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 320, -1, -1));
        add(paymentStatusTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1570, 310, 110, 35));
        add(visitChargeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1570, 172, 110, 35));
        add(paymentDateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1570, 220, 110, 35));
        add(billGenratedDateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1570, 260, 110, 35));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Vital Signs:");
        add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 460, -1, -1));

        jButton2.setText("Download Pdf version");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 530, 200, 35));

        jButton3.setText("Select a path to Download");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 440, -1, 35));

        selectFileTxt.setEnabled(false);
        add(selectFileTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 350, 35));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        DefaultTableModel model = (DefaultTableModel) allergyNameTable.getModel();
        model.setRowCount(0);

        DefaultTableModel model1 = (DefaultTableModel) medicationTable.getModel();
        model1.setRowCount(0);

        int selectedRow = patientVisitTable.getSelectedRow();

        if (selectedRow >= 0) {
            Visit visit = (Visit) patientVisitTable.getValueAt(selectedRow, 0);

            visitTypeTxt.setText(visit.getVisitType().getValue());
            VisitCharges visitCharges = visit.getVisitCharges();
            visitChargeTxt.setText(String.valueOf(visitCharges.getPatientVisitCharge()));
            paymentDateTxt.setText(visitCharges.getPaymentDate());
            billGenratedDateTxt.setText(visitCharges.getBillGenerateDate());
            paymentStatusTxt.setText(visitCharges.getPaymentStatus().getValue());
            // visitTypeTxt.setText(visit.getVisitType());

            Prescription prescription = visit.getPrescription();
            for (Medication medication : prescription.getMedicationList().getMedicationList()) {
                Object[] row = new Object[6];
                row[0] = medication;
                row[1] = medication.getEndDate();
                row[2] = medication.getStartDate();
                row[3] = medication.getDose();
                row[4] = medication.getForNoOfDays();
                row[5] = medication.getTotalNumberOfMedicine();
                model1.addRow(row);
            }

            for (Allergy allergy : visit.getAllergyList().getAllergylist()) {
                Object[] row = new Object[3];
                row[0] = allergy;
                row[1] = allergy.getEffectiveDate();
                model.addRow(row);
            }
            docCommentTxt.setText(visit.getComment());
            VitalSign vitalSign = visit.getPvitalSign();
            if (vitalSign != null);
            {
                respiratetextfield.setText(String.valueOf(vitalSign.getRespiratoryRate()));
                heartratetextfield.setText(String.valueOf(vitalSign.getHeartRate()));
                bloodpresstextfield.setText(String.valueOf(vitalSign.getBloodPressure()));
                waighttextfield.setText(String.valueOf(vitalSign.getWeight()));
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select Appointment first");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int selectedRow = patientVisitTable.getSelectedRow();

        if (selectedRow >= 0) {
            if(!selectFileTxt.getText().equals(""))
            {
         
            try {

                Visit visit = (Visit) patientVisitTable.getValueAt(selectedRow, 0);

                String userSelectedPath=selectFileTxt.getText()+"\\";
                String pattern = "yyyy-MM-dd";
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);

                String strdate = simpleDateFormat.format(new Date());
                System.out.println(strdate);
                String fileName = userAccount.getUsername() + strdate + ".pdf";
                System.out.println("fileName--->" + fileName);
                System.out.println("userSelectedPath+fileName--->"+userSelectedPath+fileName);

                OutputStream file = new FileOutputStream(new File(userSelectedPath+fileName));

                Document document = new Document();
                PdfWriter.getInstance(document, file);

                document.open();

                document.add(new Paragraph(new Date().toString()));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));

                String patientName = patient.getFirstName() + " " + patient.getLastName();

                document.add(new Paragraph("Hello " + patientName + ","));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("Please find the medicine description below"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                Prescription prescription = visit.getPrescription();
                int i = 1;
                for (Medication medication : prescription.getMedicationList().getMedicationList()) {
                    String preDetails = i + " - " + medication.getMedicationName();
                    String presecond = "Number of Dose/Day - " + medication.getDose();

                    document.add(new Paragraph(preDetails));
                    document.add(new Paragraph(presecond));
                }

                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("Please find the billing information below"));
                document.add(new Paragraph("\n"));
                document.add(new Paragraph("\n"));
                //document.add(new Paragraph("\n"));
                String visitCharges = String.valueOf(visit.getVisitCharges().getPatientVisitCharge());
                document.add(new Paragraph("Visit Charges:- " + visitCharges));

                document.add(new Paragraph("Payement Status :- " + String.valueOf(visit.getVisitCharges().getPaymentStatus())));

                document.add(new Paragraph("Payement received Date :- " + String.valueOf(visit.getVisitCharges().getPaymentDate())));
                document.add(new Paragraph("\n"));

                document.add(new Paragraph("Thanks"));
                document.add(new Paragraph("Doctor Name:-"));
                document.add(new Paragraph(visit.getDoctor().getFirstName() + " " + visit.getDoctor().getLastName()));
                document.add(new Paragraph(enterprise.getOrgName()));
                document.close();

                document.close();
                file.close();
                 JOptionPane.showMessageDialog(null, "Pdf version of bill is generated on selected path");

            } catch (Exception e) {

                e.printStackTrace();
            }
        }
            else
            {
               JOptionPane.showMessageDialog(null, "Please select path to download the file"); 
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a visit first");
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            
            File file = chooser.getCurrentDirectory();
            String filename = file.toString();

            int a = filename.lastIndexOf(".");
            
           // String fileExtention = filename.substring(a, filename.length());
            //System.out.println("fileExtention---->" + fileExtention);
            if (!filename.equals("")) {
                selectFileTxt.setText(filename);
            } else {
                selectFileTxt.setText("");
                JOptionPane.showMessageDialog(null, "Please upload jpg and ngp file");

            }
            // need to pleace validation here

        } catch (Exception e) {
            System.out.println(" in catch section of file choose");
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allergyNameTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField billGenratedDateTxt;
    private javax.swing.JTextField bloodpresstextfield;
    private javax.swing.JTextArea docCommentTxt;
    private javax.swing.JTextField heartratetextfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable medicationTable;
    private javax.swing.JTable patientVisitTable;
    private javax.swing.JTextField paymentDateTxt;
    private javax.swing.JTextField paymentStatusTxt;
    private javax.swing.JTextField respiratetextfield;
    private javax.swing.JTextField selectFileTxt;
    private javax.swing.JTextField visitChargeTxt;
    private javax.swing.JTextField visitTypeTxt;
    private javax.swing.JTextField waighttextfield;
    // End of variables declaration//GEN-END:variables
}
