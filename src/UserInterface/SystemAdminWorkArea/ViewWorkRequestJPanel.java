/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminWorkArea;

import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.EnterPrise.Enterprise;
import Business.EnterPrise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientProfileShareWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author samar
 */
public class ViewWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewWorkRequestJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private EcoSystem ecoSystem;
    private UserAccount userAccount;
    private Organization organization;

    public ViewWorkRequestJPanel(JPanel userProcessContainer, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        //this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;
        //this.userAccount = userAccount;
        populatePatientWorkRequest();
    }

    public void populatePatientWorkRequest() {

        DefaultTableModel model = (DefaultTableModel) patientWorkRequestTable.getModel();
        model.setRowCount(0);
        System.out.println("enterprise.getWorkQueue().getWorkRequestList()-->" + ecoSystem.getWorkQueue().getWorkRequestList().size());
        System.out.println("enterprise.getWorkQueue().getWorkRequestList()-->" + ecoSystem.getOrgName());
        for (WorkRequest workRequest : ecoSystem.getWorkQueue().getWorkRequestList()) {
            Object row[] = new Object[14];
            if (workRequest instanceof PatientProfileShareWorkRequest) {

                PatientProfileShareWorkRequest patientProfileShareWorkRequest = (PatientProfileShareWorkRequest) workRequest;

                row[0] = patientProfileShareWorkRequest;
                row[1] = patientProfileShareWorkRequest.getRequestDate();

                // patient approve details
                row[2] = patientProfileShareWorkRequest.getPatient();
                row[3] = patientProfileShareWorkRequest.getResolveDate();
                row[4] = patientProfileShareWorkRequest.getPatientApproveStatus();

                // Second Approver Details
                row[5] = patientProfileShareWorkRequest.getSecondReceiver();
                row[6] = patientProfileShareWorkRequest.getSecondReceiverDate();
                row[7] = patientProfileShareWorkRequest.getSecondApproverStatus();

                // Third Approver Dateils
                //row[8] = patientProfileShareWorkRequest.getThirdReceiver();
                row[8] = patientProfileShareWorkRequest.getThirdReceiverDate();
                row[9] = patientProfileShareWorkRequest.getThirdApproverStatus();

                // final doctor Details
                row[10] = patientProfileShareWorkRequest.getFinalDocReceiverStatus();
                row[11] = patientProfileShareWorkRequest.getFinalDocReceivedDate();
                row[12] = patientProfileShareWorkRequest.getDoctorReceiver();

                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientWorkRequestTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Work Request");

        patientWorkRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request Raised by", "Raised Date", "Patient Profile name", "Patient approval Date", "Patient Status", "EnterPrise Approver", "Hospital Enterprise Approver Date", "Approve Date", "Eco System approver Date", "Eco System approver Status", "Receiver Doctor Name", "Final Doctor receive Date", "Status"
            }
        ));
        jScrollPane1.setViewportView(patientWorkRequestTable);

        jButton1.setText("Approve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reject");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(530, 530, 530)
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1620, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(backJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 418, Short.MAX_VALUE)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int patientSelectedRow = patientWorkRequestTable.getSelectedRow();
        if (patientSelectedRow >= 0) {

            PatientProfileShareWorkRequest patientProfileShareWorkRequest = (PatientProfileShareWorkRequest) patientWorkRequestTable.getValueAt(patientSelectedRow, 0);

            if(patientProfileShareWorkRequest.getThirdApproverStatus()==null)
            {
    
            Date todayDate = new Date();
            patientProfileShareWorkRequest.setThirdApproverStatus("Approved");
            patientProfileShareWorkRequest.setThirdReceiverDate(todayDate);
            //patientProfileShareWorkRequest.setThirdReceiver("SysAdmin");

            Enterprise receiverdocEnterprise = patientProfileShareWorkRequest.getReceiverDocenterprise();
            Doctor receiverDoctor = patientProfileShareWorkRequest.getDoctorReceiver();

            //System.out.println("enterprise name-->" + enterprise.getOrgName());
            Network network = patientProfileShareWorkRequest.getReceiverDoctorNetwork();
            System.out.println("  above for condition-======");
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterPriseList()) {
                System.out.println("  above for condition-======222222222222");
                if (enterprise instanceof HospitalEnterprise) {
                    System.out.println("  above for condition-======3333333");
                    if (enterprise.getOrgName().equalsIgnoreCase(receiverdocEnterprise.getOrgName())) {
                        System.out.println("  above for condition-======4444444444");
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            if (organization instanceof DoctorOrganization) {
                                for (UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()) {
                                    
                                    if (userAccount.getEmployee().getEmpID()==(receiverDoctor.getEmpID())) {
                                        System.out.println("  above for condition-======666666666666");
                                        //JOptionPane.showMessageDialog(null, "check 11");
                                        userAccount.getWorkQueue().getWorkRequestList().add(patientProfileShareWorkRequest);
                                        System.out.println("userAccount ---->" + userAccount.getUsername());
                                        System.out.println("userAccount.getWorkQueue().getWorkRequestList()-->" + userAccount.getWorkQueue().getWorkRequestList().size());
                                        System.out.println("===== final received================");
                                        populatePatientWorkRequest();
                                        JOptionPane.showMessageDialog(null, "Request approved");
                                    }

                                }
                            }
                        }

                    }

                }
                System.out.println("=====after conditc check----");
            }

        } else
            {
               JOptionPane.showMessageDialog(null, "This is already processed request");  
            }
        
        } else {
            JOptionPane.showMessageDialog(null, "Please select Request first");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int patientSelectedRow = patientWorkRequestTable.getSelectedRow();
        if (patientSelectedRow >= 0) {

            PatientProfileShareWorkRequest patientProfileShareWorkRequest = (PatientProfileShareWorkRequest) patientWorkRequestTable.getValueAt(patientSelectedRow, 0);
            if(patientProfileShareWorkRequest.getThirdApproverStatus()==null)
            {
              Date todayDate = new Date();
            patientProfileShareWorkRequest.setThirdApproverStatus("Reject");
            patientProfileShareWorkRequest.setThirdReceiverDate(todayDate);
            JOptionPane.showMessageDialog(null, "Request Rejected");  
            }
             else
            {
               JOptionPane.showMessageDialog(null, "This is already processed request");  
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select Request first");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientWorkRequestTable;
    // End of variables declaration//GEN-END:variables
}
