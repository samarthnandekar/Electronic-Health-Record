/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.EnterPrise.Enterprise;
import Business.EnterPrise.EnterpriseDirectory;
import Business.EnterPrise.HospitalEnterprise;
import Business.Network.Network;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samarth
 */
public class ManageEnterpriseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;

    public ManageEnterpriseJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseTypeJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        locationLongTxt = new javax.swing.JTextField();
        locationLatiTxt = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 870, 100, 42));

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Type", "Latitude", "Longitude"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 100, 730, 95));

        jLabel1.setText("Network:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, -1, -1));

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 240, 162, 35));

        jLabel2.setText("Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 360, -1, -1));
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 350, 162, 35));

        jLabel3.setText("Enterprise Type:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 300, -1, -1));

        enterpriseTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(enterpriseTypeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 290, 162, 35));

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 640, 100, 36));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Create EnterPrsie");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("Note:- All the above fields are mandatory.");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 600, -1, -1));

        jLabel14.setText("location latitude:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 420, -1, -1));

        jLabel15.setText("Location longitude:");
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 490, -1, -1));
        add(locationLongTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 480, 160, 35));
        add(locationLatiTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 410, 160, 35));
    }// </editor-fold>//GEN-END:initComponents
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList().getNetworkList()) {
            System.out.println("network name====" + network.getName());
            EnterpriseDirectory ed = network.getEnterpriseDirectory();
            System.out.println("network name2nd time====" + network.getName());
            for (Enterprise enterprise : ed.getEnterPriseList()) {
                Object[] row = new Object[5];
                System.out.println("----inside the EnterPrise-======");
                row[0] = enterprise.getOrgName();
                row[1] = network.getName();
                row[2] = enterprise.getEnterpriseType().getValue();
                row[3] = enterprise.getLatitude();
                row[4]= enterprise.getLongitude();
                model.addRow(row);
            }
        }
    }

    private void populateComboBox() {
        networkJComboBox.removeAllItems();
        enterpriseTypeJComboBox.removeAllItems();

        for (Network network : system.getNetworkList().getNetworkList()) {
            networkJComboBox.addItem(network);
        }

        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
            enterpriseTypeJComboBox.addItem(type);
        }

    }

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        //sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        Enterprise.EnterpriseType type = (Enterprise.EnterpriseType) enterpriseTypeJComboBox.getSelectedItem();

        String enterPriseName = nameJTextField.getText().trim();
        String latitude = locationLatiTxt.getText().trim();
        String longitude = locationLongTxt.getText().trim();
        
        
        boolean isUserInputValid = checkUserInput(enterPriseName,latitude,longitude);
        
        try
        {
          double checkforinput=Double.parseDouble(latitude);
          double checkforinput2 = Double.parseDouble(longitude);
          
        }
        catch(Exception e)
                {
                    isUserInputValid=false;
                    JOptionPane.showMessageDialog(null, "please enter valid value for longitude and latitude");
                }

        if (isUserInputValid) {
            if (network == null || type == null) {
                JOptionPane.showMessageDialog(null, "Invalid Input!");
                return;
            }
            boolean isEnterPriseNamevalid = checkEnterPriseName(enterPriseName, network, type);
            if (isEnterPriseNamevalid) {
                Enterprise enterprise = network.getEnterpriseDirectory().createAndAddEnterprise(enterPriseName, type);
        
                   enterprise.setLatitude(Double.parseDouble(latitude));
                    enterprise.setLongitude(Double.parseDouble(longitude)); 
                    
                    nameJTextField.setText("");
                locationLatiTxt.setText("");
                locationLongTxt.setText("");
                populateTable();
                JOptionPane.showMessageDialog(null, "Thanks for input, EnterPrise Created");
 
            }

        }

    }//GEN-LAST:event_submitJButtonActionPerformed

    // to find out whether same enterprise is present already
    public boolean checkEnterPriseName(String enterPriseName, Network network, Enterprise.EnterpriseType type) {
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterPriseList()) {
            if (enterprise.getOrgName().equals(enterPriseName)) {
                JOptionPane.showMessageDialog(null, "EnterPrise Name is already present, Please enter other name");
                return false;
            }
        }
        return true;
    }

    // function to validate the user Input
    public boolean checkUserInput(String enterPriseName, String latitude, String longitude)
    {
        String validationerror = "Please correct the following error:";

        if ((enterPriseName.trim()).equals("")) {
            validationerror = validationerror + "\n" + "Please enter the Name";
        }
        if (!(enterPriseName.trim()).equals("") && !(enterPriseName.trim()).equals("null")
                && !((enterPriseName.trim()).matches("[a-zA-Z0-9]*"))) {
            validationerror = validationerror + "\n" + "Name should "
                    + "contain Alphabet and numbers only";
        }
        if ((!(enterPriseName.trim()).equals("")) && (!(enterPriseName.trim().length() < 10))) {
            validationerror = validationerror + "\n" + "Name"
                    + " lenght should be less than 10";
        }

        //validation for latitude
        if ((latitude.trim()).equals("")) {
            validationerror = validationerror + "\n" + "Please enter the latitude";
        }
        if((!(latitude.trim()).equals("")) && (!(latitude.trim().length()<25)))
          {
        validationerror = validationerror + "\n" + "latitude value can not be more than 25, please enter valid number";           
          }
        
        
        //validation for longitude
        if ((longitude.trim()).equals("")) {
            validationerror = validationerror + "\n" + "Please enter the longitude";
        }
        if((!(longitude.trim()).equals("")) && (!(longitude.trim().length()<25)))
          {
        validationerror = validationerror + "\n" + "longitude value can not be more than 25, please enter valid number";           
          }

        
        if (validationerror.equals("Please correct the following error:")) {
            validationerror = "Thanks for details";
            //JOptionPane.showMessageDialog(null, validationerror);
            return true;
        } else {
            JOptionPane.showMessageDialog(null, validationerror);
            return false;
        }

    }


    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_networkJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField locationLatiTxt;
    private javax.swing.JTextField locationLongTxt;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
