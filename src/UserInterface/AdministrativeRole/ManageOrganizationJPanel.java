/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.EcoSystem;
import Business.EnterPrise.AmbulanceEnterprise;
import Business.EnterPrise.Enterprise;
import Business.EnterPrise.HospitalEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.OrganizationDirectory;
import Business.PatientVisit.Visit;
import UserInterface.Doctor.DoctorViewPatientVisitJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samarth
 */
public class ManageOrganizationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrganizationJPanel
     */
    private OrganizationDirectory orgDirectory;
    private JPanel userProcessContainer;
    private Organization currOrganization;
    private EcoSystem ecoSystem;
    private Enterprise enterprise;

    public ManageOrganizationJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.orgDirectory = enterprise.getOrganizationDirectory();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.enterprise = enterprise;
        populateTable();
        populateCombo();
        showAndHideFields();
    }

    public void showAndHideFields() {
        if (enterprise instanceof HospitalEnterprise) {
            addnewRuletxt.setVisible(true);
            selectOrgBtn.setVisible(true);
        } else if (enterprise instanceof AmbulanceEnterprise) {
            addnewRuletxt.setVisible(false);
            selectOrgBtn.setVisible(false);
        }

    }

    private void populateCombo() {
        organizationJComboBox.removeAllItems();
        for (Type type : Organization.Type.values()) {
            //if (!type.getValue().equals(Type.Admin.getValue()))
            //organizationJComboBox.addItem(type);
            if ((enterprise instanceof HospitalEnterprise)
                    && ((type.getValue().equalsIgnoreCase(Type.Doctor.getValue()))
                    || (type.getValue().equalsIgnoreCase(Type.Receptionist.getValue()))
                    || (type.getValue().equalsIgnoreCase(Type.Nurse.getValue()))
                    || (type.getValue().equalsIgnoreCase(Type.Pharmacist.getValue()))
                    || (type.getValue().equalsIgnoreCase(Type.Cashier.getValue()))
                    || (type.getValue().equalsIgnoreCase(Type.FieldDrive.getValue())))) {
                organizationJComboBox.addItem(type);
            }
            if ((enterprise instanceof AmbulanceEnterprise)
                    && ((type.getValue().equalsIgnoreCase(Type.AmbulanceAssistant.getValue()))
                    || (type.getValue().equalsIgnoreCase(Type.AmbulanceReceptionist.getValue())))) {
                organizationJComboBox.addItem(type);
            }
        }
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();

        model.setRowCount(0);

        for (Organization organization : orgDirectory.getOrganizationList()) {

            Object[] row = new Object[2];
            row[0] = organization;
            //row[1] = organization.getOrganizationID();            
            model.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        addJButton = new javax.swing.JButton();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        selectOrgBtn = new javax.swing.JButton();
        addnewRuletxt = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 100, 480, 92));

        addJButton.setText("Add Organization");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });
        add(addJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 230, -1, 35));

        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 230, 180, 35));

        jLabel1.setText("Organization Type ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 240, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 545, -1, 35));

        selectOrgBtn.setText("Select Organization");
        selectOrgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectOrgBtnActionPerformed(evt);
            }
        });
        add(selectOrgBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, -1, 35));

        addnewRuletxt.setText("Note:-Doctor Organization from table to add the rules.");
        add(addnewRuletxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 380, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Manage Organization");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        Type type = (Type) organizationJComboBox.getSelectedItem();
        System.out.println("===above organization List======");
        boolean isOrgPresent = true;
        int orgCount = orgDirectory.getOrganizationList().size();
        for (Organization org : orgDirectory.getOrganizationList()) {
            
            if (type.getValue().equalsIgnoreCase(org.getClass().getSimpleName())) {
                isOrgPresent = false;
                break;
            }
        }
        if (isOrgPresent) {
            orgDirectory.createOrganization(type);
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Organization already exists. ");
        }
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void selectOrgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectOrgBtnActionPerformed
        int selectedRow = organizationJTable.getSelectedRow();

        if (selectedRow >= 0) {
            Organization organization = (Organization) organizationJTable.getValueAt(selectedRow, 0);
            if(organization instanceof DoctorOrganization)
            {
             currOrganization = organization;
            ManagerDocOrganizationRule managerDocOrganizationRule = new ManagerDocOrganizationRule(userProcessContainer, currOrganization);
            userProcessContainer.add("ManagerDocOrganizationRule", managerDocOrganizationRule);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);   
            }
            else {
            JOptionPane.showMessageDialog(null, "Please select the Doctor Organization from Table to add rules");
        }


        } else {
            JOptionPane.showMessageDialog(null, "Please select the Doctor Organization from Table to add rules");
        }


    }//GEN-LAST:event_selectOrgBtnActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_organizationJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JLabel addnewRuletxt;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JButton selectOrgBtn;
    // End of variables declaration//GEN-END:variables
}
