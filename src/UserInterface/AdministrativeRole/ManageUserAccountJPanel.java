/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdministrativeRole;

import Business.Doctor.Doctor;
import Business.Doctor.DoctorDepartment;
import Business.Employee.Employee;
import Business.EnterPrise.Enterprise;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MedicineWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Samarth
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUserAccountJPanel
     */
    private JPanel container;
    private Enterprise enterprise;
    private Doctor doctor;

    public ManageUserAccountJPanel(JPanel container, Enterprise enterprise) {
        initComponents();
        this.enterprise = enterprise;
        this.container = container;

        popOrganizationComboBox();
        // employeeJComboBox.removeAllItems();
        popData();
    }

    public void popOrganizationComboBox() {
        organizationJComboBox.removeAllItems();

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            organizationJComboBox.addItem(organization);
        }
    }

    public void populateEmployeeComboBox(Organization organization) {
        employeeJComboBox.removeAllItems();
        if (organization instanceof DoctorOrganization) {
            DoctorOrganization docOrg = (DoctorOrganization) organization;
            for (DoctorDepartment doctorDepartment : docOrg.getDoctorDepartmentCatalog().getDoctorDepartmentCatalog()) {
                for (Doctor doctor : doctorDepartment.getDoctorDirectory().getDoctorList()) {
                    employeeJComboBox.addItem(doctor);
                }
            }
        } else {
            for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()) {
                employeeJComboBox.addItem(employee);
            }

        }

    }

    private void populateRoleComboBox(Organization organization) {
        roleJComboBox.removeAllItems();
        for (Role role : organization.getSupportedRole()) {
            roleJComboBox.addItem(role);
        }
    }

    public void popData() {

        DefaultTableModel model = (DefaultTableModel) userJTable.getModel();

        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                Object row[] = new Object[3];
                row[0] = ua;
                row[1] = ua.getRole();
                row[2] = ua.getUserAccountStatus().getValue();
                ((DefaultTableModel) userJTable.getModel()).addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        organizationJComboBox = new javax.swing.JComboBox();
        nameJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        roleJComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        userJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        employeeJComboBox = new javax.swing.JComboBox();
        backjButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        createUserJButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        passwordJTextField = new javax.swing.JPasswordField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 370, 290, 35));
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 540, 290, 35));

        jLabel4.setText("Role");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 490, -1, -1));

        jLabel1.setText("User Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 540, -1, -1));

        roleJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(roleJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 480, 290, 35));

        userJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 679, 179));

        jLabel2.setText("Password");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 590, -1, -1));

        jLabel3.setText("Employee");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 420, -1, -1));

        employeeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        employeeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeJComboBoxActionPerformed(evt);
            }
        });
        add(employeeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 420, 290, 35));

        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 770, 112, 40));

        jLabel5.setText("Organization");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 380, -1, -1));

        createUserJButton.setText("Create");
        createUserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserJButtonActionPerformed(evt);
            }
        });
        add(createUserJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 650, 100, 36));

        jButton1.setText("Activate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 280, 100, 35));

        jButton2.setText("Deactive");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 280, 100, 35));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Manager User Account");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 10, -1, -1));
        add(passwordJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 590, 290, 35));
    }// </editor-fold>//GEN-END:initComponents

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null) {
            populateEmployeeComboBox(organization);
            populateRoleComboBox(organization);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void createUserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserJButtonActionPerformed
        String userName = nameJTextField.getText();

        String password = String.valueOf(passwordJTextField.getPassword());

        boolean isUserInputvalid = checkUserInputDate(userName, password);
        
        if (isUserInputvalid) {
            Organization organization = (Organization) organizationJComboBox.getSelectedItem();
            Employee employee = (Employee) employeeJComboBox.getSelectedItem();
            Role role = (Role) roleJComboBox.getSelectedItem();
            boolean isUsernamePresentInDir=checkUserNameInDir(userName,organization);
            if(isUsernamePresentInDir)
            {
             UserAccount ua = new UserAccount();
            ua.setUsername(userName);
            ua.setPassword(password);
            ua.setEmployee(employee);
            ua.setRole(role);
            organization.getUserAccountDirectory().addUserAccount(ua);
            if (organization instanceof DoctorOrganization) {
                doctor = (Doctor) employeeJComboBox.getSelectedItem();
                doctor.setDocUserName(userName);
            }
            popData(); 
            clearText();
            }
            
            
        }

    }//GEN-LAST:event_createUserJButtonActionPerformed
   
    public void clearText()
    {
      nameJTextField.setText("");
     passwordJTextField.setText("");
   
    }
    
    public boolean checkUserNameInDir(String userName, Organization organization)
   {
       for(UserAccount userAccount:organization.getUserAccountDirectory().getUserAccountList())
       {
           if(userAccount.getUsername().equals(userName))
           {
                JOptionPane.showMessageDialog(null, "User Name already Present, please enter any other userName");
               return false;
           }
       }
       return true;
   }
    
    
    
    public boolean checkUserInputDate(String userName, String password) {
        String validationerror = "Please correct the following error:";
        // validation for userName
        if ((userName.trim()).equals("")) {
            validationerror = validationerror + "\n" + "Please enter the User Name";
        }

        if (!(userName.trim()).equals("") && !(userName.trim()).equals("null")
                && !((userName.trim()).matches("[a-zA-Z0-9]*"))) {
            validationerror = validationerror + "\n" + "userName should "
                    + "contain Alphabet and numbers only";
        }

        if ((!(userName.trim()).equals("")) && (!(userName.trim().length() < 10))) {
            validationerror = validationerror + "\n" + " userName, lenght should be less than 10";
        }

        if ((password.trim()).equals("")) {
            validationerror = validationerror + "\n" + "Please enter the User password";
        }

        if (!(password.trim()).equals("") && !(password.trim()).equals("null")
                && !((password.trim()).matches("[a-zA-Z0-9]*"))) {
            validationerror = validationerror + "\n" + "userName should "
                    + "contain Alphabet and numbers only";
        }

        if ((!(password.trim()).equals("")) && (!(password.trim().length() < 10))) {
            validationerror = validationerror + "\n" + " userName, lenght should be less than 10";
        }

        if (validationerror.equals("Please correct the following error:")) {
            validationerror = "Thanks for details";
            //JOptionPane.showMessageDialog(null, validationerror);
            return true;
        } else {
            JOptionPane.showMessageDialog(null, validationerror);
            return false;
        }

    }
    private void employeeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeJComboBoxActionPerformed

        //doctor = (Doctor) employeeJComboBox.getSelectedItem();

    }//GEN-LAST:event_employeeJComboBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

       int selectedRow=userJTable.getSelectedRow();
       if(selectedRow>=0)
        {
           
            UserAccount userAccount= (UserAccount)userJTable.getValueAt(selectedRow,0);
            if(userAccount.getUserAccountStatus().getValue().equalsIgnoreCase("Deactivate"))
            {
               JOptionPane.showMessageDialog(null, "Selected user account is already deactivated");
            }
            else
            {
              userAccount.setUserAccountStatus(UserAccount.UserAccountStatus.Deactivate);
            popData();
            JOptionPane.showMessageDialog(null, "Selected user deactivated");
            }
            
        }
       else
       {
           JOptionPane.showMessageDialog(null, "Please select a row");
       }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        int selectedRow=userJTable.getSelectedRow();
       if(selectedRow>=0)
        {
            UserAccount userAccount= (UserAccount)userJTable.getValueAt(selectedRow,0);
            
            if(userAccount.getUserAccountStatus().getValue().equalsIgnoreCase("Active"))
            {
               JOptionPane.showMessageDialog(null, "Selected user account is already Active");
            }
            else
            {
                userAccount.setUserAccountStatus(UserAccount.UserAccountStatus.Active);
                popData();
                JOptionPane.showMessageDialog(null, "Selected user Activated");
            }
        }
       else
       {
           JOptionPane.showMessageDialog(null, "Please select a row");
       }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton createUserJButton;
    private javax.swing.JComboBox employeeJComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JPasswordField passwordJTextField;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JTable userJTable;
    // End of variables declaration//GEN-END:variables
}
