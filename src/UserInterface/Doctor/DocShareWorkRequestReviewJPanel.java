/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Doctor;

import Business.Doctor.Appointment;
import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.EnterPrise.Enterprise;
import Business.EnterPrise.HospitalEnterprise;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Patient.PatientDirectory;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientProfileShareWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author samar
 */
public class DocShareWorkRequestReviewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DocShareWorkRequestReviewJPanel
     */
    private JPanel userProcessContainer;
    private Organization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem ecoSystem;

    public DocShareWorkRequestReviewJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization org, Enterprise enterprise, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = org;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.ecoSystem = ecoSystem;
        System.out.println("userAccount.getWorkQueue().getWorkRequestList()---name--->" + userAccount.getUsername());
        System.out.println("userAccount.getWorkQueue().getWorkRequestList()--->" + userAccount.getWorkQueue().getWorkRequestList().size());
        populatePatientWorkRequest();
    }

    public void populatePatientWorkRequest() {

        DefaultTableModel model = (DefaultTableModel) patientWorkRequestTable.getModel();
        model.setRowCount(0);
        for (WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList()) {
            Object row[] = new Object[14];
            if (workRequest instanceof PatientProfileShareWorkRequest) {

                PatientProfileShareWorkRequest patientProfileShareWorkRequest = (PatientProfileShareWorkRequest) workRequest;

                row[0] = patientProfileShareWorkRequest;
                row[1] = patientProfileShareWorkRequest.getRequestDate();

                // patient approve details
                row[2] = patientProfileShareWorkRequest.getPatient();
                row[3] = patientProfileShareWorkRequest.getResolveDate();
                row[4] = patientProfileShareWorkRequest.getPatientApproveStatus();

                // Second Approver Details
                row[5] = patientProfileShareWorkRequest.getSecondReceiver();
                row[6] = patientProfileShareWorkRequest.getSecondReceiverDate();
                row[7] = patientProfileShareWorkRequest.getSecondApproverStatus();

                // Third Approver Dateils
               // row[] = patientProfileShareWorkRequest.getThirdReceiver();
                row[8] = patientProfileShareWorkRequest.getThirdReceiverDate();
                row[9] = patientProfileShareWorkRequest.getThirdApproverStatus();

                // fial doctor Details
                row[10] = patientProfileShareWorkRequest.getDoctorReceiver();
                row[11] = patientProfileShareWorkRequest.getFinalDocReceiverStatus();
                row[12] = patientProfileShareWorkRequest.getFinalDocReceivedDate();

                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientWorkRequestTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Work Request");

        patientWorkRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request Raised by", "Raised Date", "Patient Profile name", "Patient approval Date", "Patient Status", "Hospital Enterprise Approver Date", "Approve Date", "Enterprise Status", "Eco System approver Date", "Eco System approver Status", "Receiver Doctor ", "Status", "Receiver Doctor Date"
            }
        ));
        jScrollPane1.setViewportView(patientWorkRequestTable);

        jButton1.setText("Approve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Reject");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(482, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(1034, 1034, 1034))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(481, 481, 481)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1620, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 314, Short.MAX_VALUE)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int patientSelectedRow = patientWorkRequestTable.getSelectedRow();
        if (patientSelectedRow >= 0) {

            PatientProfileShareWorkRequest patientProfileShareWorkRequest = (PatientProfileShareWorkRequest) patientWorkRequestTable.getValueAt(patientSelectedRow, 0);
            System.out.println("System.out.println(\"patientProfileShareWorkRequest.getDoctorReceiver()-->"+patientProfileShareWorkRequest.getDoctorReceiver());
            //System.out.println("patientProfileShareWorkRequest.getDoctorReceiver().getUsername()-->"+patientProfileShareWorkRequest.getDoctorReceiver().getUsername());
            Person person=patientProfileShareWorkRequest.getSender();
            System.out.println("person.getUsername();--->"+person.getUsername());
            if (patientProfileShareWorkRequest.getDoctorReceiver().getUsername().equalsIgnoreCase(userAccount.getUsername())) {

                if (patientProfileShareWorkRequest.getFinalDocReceiverStatus()==null) {
                    Date todayDate = new Date();
                    patientProfileShareWorkRequest.setFinalDocReceiverStatus("Approved");
                    patientProfileShareWorkRequest.setFinalDocReceivedDate(todayDate);

                    enterprise.getWorkQueue().getWorkRequestList().add(patientProfileShareWorkRequest);
                    System.out.println("enterprise--->" + enterprise.getOrgName());
                    System.out.println("enterprise.getWorkQueue().getWorkRequestList()-->" + enterprise.getWorkQueue().getWorkRequestList().size());
                   // JOptionPane.showMessageDialog(null, "Request approved");

            // code to add patient in doc organization and in his profile
                    if (enterprise instanceof HospitalEnterprise) {
                        HospitalEnterprise hospitalEnterprise = (HospitalEnterprise) enterprise;
                        PatientDirectory pd = hospitalEnterprise.getPatientDirectory();
                        Patient patient = patientProfileShareWorkRequest.getPatient();
                        pd.addpatPatient(patient);

                        Appointment appointment = new Appointment();
                        Doctor receDoctor = patientProfileShareWorkRequest.getDoctorReceiver();
                        appointment.setDoctor(receDoctor);
                        appointment.setAppointmentStatus(Appointment.AppointmentStatus.Canceled);
                        appointment.setPatient(patient);
                        Date todatDate = new Date();
                        SimpleDateFormat sdf = new SimpleDateFormat();
                        String currdate = sdf.format(todatDate);
                        appointment.setDate(currdate);
                        appointment.setTimeSlot("12PM-12:30PM");
                        receDoctor.getAppointmentList().addAppointment(appointment);

                        System.out.println("==============below the code=====approve code button==");
                        JOptionPane.showMessageDialog(null, "Request Approved,now can view patient information");
                        populatePatientWorkRequest();
                    } 

                }else {
                        JOptionPane.showMessageDialog(null, "Request is already processed, can not do with this request");
                    }

            } else {
                JOptionPane.showMessageDialog(null, "you are not authorised to tale action on this request");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select a Request");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int patientSelectedRow = patientWorkRequestTable.getSelectedRow();
        if (patientSelectedRow >= 0) {

            PatientProfileShareWorkRequest patientProfileShareWorkRequest = (PatientProfileShareWorkRequest) patientWorkRequestTable.getValueAt(patientSelectedRow, 0);

            if (patientProfileShareWorkRequest.getFinalDocReceiverStatus()==null) {
                Date todayDate = new Date();
                patientProfileShareWorkRequest.setFinalDocReceiverStatus("Reject");
                patientProfileShareWorkRequest.setFinalDocReceivedDate(todayDate);
                JOptionPane.showMessageDialog(null, "Request Rejected");
                populatePatientWorkRequest();
            } else {
                JOptionPane.showMessageDialog(null, "Request is already processed, can not do with this request");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a Request");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientWorkRequestTable;
    // End of variables declaration//GEN-END:variables
}
